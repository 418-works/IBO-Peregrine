#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=file
comment1.target=HummingbirdProofer(java.io.File)
comment1.text=\n\ Constructor\n\ \n\ @param\ path\n
comment10.params=line
comment10.target=void\ proofFFMolt(DataLine)
comment10.text=\n\ Check\ FF\ molt.\ Allowable\ values\:\ N,\ S,\ J,A,\ blank\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment11.params=line
comment11.target=void\ proofBP(DataLine)
comment11.text=\n\ Check\ BP\ values\ (0-5,\ blank\ okay)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment12.params=line
comment12.target=void\ proofCP(DataLine)
comment12.text=\n\ Check\ CP\ values\ (0-3\ allowed,\ blank\ okay)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment13.params=line
comment13.target=void\ proofFat(DataLine)
comment13.text=\n\ Check\ values\ for\ fat.\ 0-5,\ blank\ are\ allowed.\ 6\ fat\ is\ okay\ but\ only\ if\n\ there's\ a\ note\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment14.params=line
comment14.target=void\ proofBMlt(DataLine)
comment14.text=\n\ Check\ values\ for\ body\ molt.\ Allowable\ values\:\ 0-4,\ blank\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment15.params=line
comment15.target=void\ proofFFWear(DataLine)
comment15.text=\n\ Check\ values\ for\ FF\ wear.\ Allowable\ values\:\ 0-5,\ blank\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment16.params=line
comment16.target=void\ proofMuscle(DataLine)
comment16.text=\n\ Check\ values\ for\ muscle.\ 2.5,3,4,5,\ blank\ allowed.\ 1\ or\ 2\ are\ allowed\ but\n\ MUST\ have\ a\ note,\ otherwise\ it's\ likely\ a\ type-o\ (check\ hard\ copy)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment17.params=line
comment17.target=void\ proofSkullAge(DataLine)
comment17.text=\n\ Check\ that\ skull\ matches\ with\ age\:\ allowable\ values\ for\ skull\ 0-6,\ 8,9,\n\ blank.\ Flag\ all\ values\ in\ the\ skull\ column\ that\ don't\ match\ these\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment18.params=line
comment18.target=void\ proofLocation(DataLine)
comment18.text=\n\ View\ values\ for\ Location.\ Make\ sure\ there\ are\ no\ blanks\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment19.params=line
comment19.target=void\ proofBandSize(DataLine)
comment19.text=\n\ View\ values\ for\ band\ size.\ Make\ sure\ there\ are\ no\ blanks.\ Make\ sure\ the\ only\n\ values\ used\ are\ 0A,\ 0,\ 1,\ 1B,\ 1A,\ 1C,\ 2,\ 3,\ 3A,\ 3B\n\ \n\ @param\ line\n
comment2.params=categories\ category
comment2.target=void\ CategoryIndexValidatorAssigner(java.lang.String[],\ java.lang.String)
comment2.text=\n\ Assigns\ column\ numbers\ to\ categories\n\ \n\ @param\ categories\n\ \ \ \ \ \ \ \ \ \ \ \ list\ of\ valid\ categories\n\ @param\ category\n\ \ \ \ \ \ \ \ \ \ \ \ category\ to\ be\ assigned\n
comment20.params=line
comment20.target=void\ proofAgeFFMolt(DataLine)
comment20.text=\n\ Check\ that\ FF\ molt\ matches\ with\ age.\ blanks\ are\ okay,\ and\ can\ match\ with\ any\n\ age.\ Refer\ to\ table\ on\ rules\ page\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment21.params=line
comment21.target=void\ proofHowAgedFFMolt(DataLine)
comment21.text=\n\ if\ "how\ aged"\ says\ MR,\ FF\ molt\ must\ be\ S\ or\ J\ (can't\ be\ blank,\ N,\ or\ A)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment22.params=line
comment22.target=void\ proofHowAgedFFWear(DataLine)
comment22.text=\n\ If\ "how\ aged"\ says\ FF\ then\ FF\ Wear\ cannot\ be\ blank\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment23.params=line
comment23.target=void\ proofAgeFFWear(DataLine)
comment23.text=\n\ 0\ or\ 1\ FF\ wear\ is\ highly\ suspicious\ for\ age\ 5\ and\ 6.\ Flag\ all\ these\ records\n\ (Sometimes\ 0\ FF\ wear\ is\ normal\ if\ paired\ with\ S\ FF\ molt,\ but\ then\n\ micro-ageing\ is\ suspect,\ so\ we\ should\ flag\ the\ record\ either\ way...maybe\ with\n\ a\ message\ "FF\ wear\ and\ age\ combination\ unlikely.\ Check\ this\ record"\n\ \n\ 2+\ FF\ wear\ is\ suspicious\ for\ age\ 4--add\ message\ "age\ and\ FF\ wear\ combination\n\ unlikely"\n\ \n\ 4+\ is\ suspicious\ for\ age\ 2--add\ "unlikely"\ message\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment24.params=line
comment24.target=void\ proofWing(DataLine)
comment24.text=\n\ Check\ if\ wing\ is\ below\ 30\ or\ above\ 200\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment25.params=line
comment25.target=void\ proofTail(DataLine)
comment25.text=\n\ Check\ if\ tail\ is\ below\ 30\ or\ above\ 200\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment26.params=line
comment26.target=void\ proofWeight(DataLine)
comment26.text=\n\ anything\ under\ 5\ (but\ GCKI\ or\ BCHU\ RUHU\ CAHU\ okay)\ or\ over\ 200\ (raptors\ would\n\ be\ a\ rare\ exception)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment27.params=line
comment27.target=void\ proofDisposition(DataLine)
comment27.text=\n\ View\ values\ for\ band\ code\ (also\ called\ DISPOSITION).\ Make\ sure\ there\ are\ no\n\ blanks.\ Make\ sure\ the\ only\ values\ used\ are\ 1,R,4,5,8,R,U.\ Make\ sure\ 4\ and\ 8\n\ are\ only\ used\ for\ species\ codes\ BADE\ and\ BALO\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment28.params=line
comment28.target=void\ proofStatus(DataLine)
comment28.text=\n\ Check\ status.\ Allowable\ values\ for\ new\ bands\:\ 300,\ 500.\ Blank\ is\ NOT\ valid\n\ ALL\ status\ 500's\ MUST\ have\ text\ in\ the\ note\ column\ and\ a\ letter\ in\ the\ disp\n\ column\ (i.e.\ Note\ and\ Disp\ columns\ cannot\ be\ blank)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment29.params=line
comment29.target=void\ proofDisp(DataLine)
comment29.text=\n\ Check\ DISP.\ Allowable\ values\ include\:\ M,O,I,S,E,D,T,W,B,L,P,\ blank\ Any\ bird\n\ with\ a\ letter\ in\ disp\ should\ have\ a\ note\ explaining\ why\ and\ the\ status\ should\n\ say\ 500\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment3.params=line
comment3.target=void\ proofAll(DataLine)
comment3.text=\n\ Proofs\ all\ bird\ variables\ in\ current\ data\ line\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment30.params=line
comment30.target=void\ proofYear(DataLine)
comment30.text=\n\ Check\ values\ for\ YYYY.\ No\ blanks.\ Allowable\ values\ are\ any\ valid\ year\ between\n\ 1997\ and\ current\ year\ (except\ BADE\ BALO)\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment31.params=line
comment31.target=void\ proofMonth(DataLine)
comment31.text=\n\ Check\ values\ for\ MM.\ valid\:\ 2-11.\ no\ blanks\ except\ for\ BADE\ BALO\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment32.params=line
comment32.target=void\ proofDay(DataLine)
comment32.text=\n\ Check\ values\ for\ DD.\ Valid\:\ 1-31.\ no\ blanks\ except\ for\ BADE/BALO\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment33.params=line
comment33.target=void\ proofCapTime(DataLine)
comment33.text=\n\ check\ values\ for\ cap\ time.\ Allowed\ values\ include\:\ 650\ to\ 1300.\ Flag\ all\n\ other\ values\ (Other\ values\ may\ happen\ only\ if\ there\ is\ a\ note\ (sometimes\n\ songbirds\ are\ caught\ during\ owls,\ hawk\ trapping,\ etc).\ All\ values\ should\ end\n\ in\ 0's\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment34.params=line
comment34.target=void\ proofNet(DataLine)
comment34.text=\n\ Check\ values\ for\ net.\ Allowable\ values\:\ 1-10,\ blank.\ Some\ exceptions\ allowed\n\ with\ a\ note\ (e.g.\ owl\ nets)\ but\ we\ should\ flag\ those\ exceptions\ anyway\ to\n\ make\ sure\ someone\ checks\ them\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment35.params=line
comment35.target=void\ proofNotes(DataLine)
comment35.text=\n\ Check\ that\ notes\ that\ mention\ either\ "FF"\ "flat\ flies"\ or\ "mites"\ "lice"\n\ "louse"\ "mite"\ "fly"\ have\ a\ Y\ for\ parasite\ column\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment36.params=line
comment36.target=void\ proofHowAged(DataLine)
comment36.text=\n\ EY\ in\ the\ How\ Aged\ columns\ should\ only\ be\ used\ for\ species\ codes\ SPTO,\ DOWO,\n\ NOFL,\ RSFL,\ HAWO,\ DEJU,\ ORJU,\ SCJU,\ UDEJ\ --flag\ any\ other\ species\ that\ use\n\ this\ with\ note\ "Check\ in\ Pyle\ to\ confirm\ that\ this\ species\ can\ be\ aged\ by\ eye\n\ color"\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment37.params=line
comment37.target=void\ proofAgeHAHS(DataLine)
comment37.text=\n\ Check\ that\ age,\ how\ aged,\ and\ how\ sexed\ match\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment38.params=line
comment38.target=void\ proofParasites(DataLine)
comment38.text=\n\ If\ there\ is\ a\ Y\ in\ the\ parasites\ column\ there\ needs\ to\ be\ a\ note\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment39.params=line
comment39.target=void\ proofhaha2(DataLine)
comment4.params=line
comment4.target=void\ proofSpecies(DataLine)
comment4.text=\n\ Checks\ if\ species\ is\ valid,\ refer\ to\ master\ species\ list\ to\ update\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment40.params=line
comment40.target=void\ proofhshs2(DataLine)
comment5.params=data\ key\ lo\ hi
comment5.target=boolean\ binarySearch(java.lang.String[],\ java.lang.String,\ int,\ int)
comment5.text=\n\ Binary\ search\ for\ species\n\ \n\ @param\ data\n\ \ \ \ \ \ \ \ \ \ \ \ list\ of\ valid\ species\n\ @param\ key\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line's\ species\n\ @param\ lo\n\ \ \ \ \ \ \ \ \ \ \ \ current\ left\ bound\n\ @param\ hi\n\ \ \ \ \ \ \ \ \ \ \ \ current\ right\ bound\n\ @return\ whether\ species\ was\ found\ or\ not\n
comment6.params=line
comment6.target=void\ proofAge(DataLine)
comment6.text=\n\ View\ values\ for\ age.\ Acceptable\ ages\ are\:\ 0,1,2,4,5,6--flag\ any\ records\ with\n\ blank\ age\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment7.params=line
comment7.target=void\ proofSex(DataLine)
comment7.text=\n\ View\ values\ for\ sex.\ Acceptable\ values\=\ M\ F\ U--flag\ all\ the\ blanks\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment8.params=line
comment8.target=void\ proofAgeBPCP(DataLine)
comment8.text=\n\ Check\ that\ age\ and\ BP/CP\ match\:\ Age\ 2,\ 4,\ and\ 0\ should\ always\ have\ 0\ for\ both\n\ BP\ and\ CP\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
comment9.params=line
comment9.target=void\ proofHowSexed(DataLine)
comment9.text=\n\ View\ values\ for\ how\ aged.\ allowable\ values\ include\:\ PL,\n\ EY,FF,MB,PC,LP,NL,MR,SK,TS,\ (blank\ only\ in\ second\ field,\ or\ for\ age\ 0)\n\ \n\ F\:\ PL,BP,WL--first\ HS\ field\ can\ NOT\ be\ blank,\ if\ sexed\ by\ BP,\ BP\ value\ cannot\n\ be\ blank\ or\ 0\n\ \n\ M\:\ PL,CL,WL--first\ HS\ field\ can\ NOT\ be\ blank,\ if\ sexed\ by\ CL,\ CP\ value\ cannot\n\ be\ blank,\ 0,\ or\ 1\ (i.e.\ CP\ must\ \=\ 2\ or\ 3)\n\ \n\ U\:\ always\ blank,\ or\ IC,\ If\ not\ blank,\ check\ hard\ copy\ for\ errors\ or\n\ white-out.\ If\ sex\ is\ whited\ out,\ leave\ as\ U.\ Check\ fields\ above\ and\ below\ to\n\ make\ sure\ there's\ not\ a\ data\ entry\ error\n\ \n\ @param\ line\n\ \ \ \ \ \ \ \ \ \ \ \ current\ line\ to\ be\ proofed\n
numComments=41
